name: Test

on: 
  push:
    paths-ignore:
      - 'README.md'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true

    - name: Test with cargo
      uses: actions-rs/cargo@v1.0.1
      with:
          command: test
          toolchain: nightly

    - name: Install dependencies with pip
      working-directory: python
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: build python package
      working-directory: python
      run: poetry run maturin develop

    - name: Test with pytest
      working-directory: python
      run: poetry run pytest tests

  publish-rust:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/rust/')
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Publish to creates.io
      run: |
        cargo login ${{ secrets.CRATES_PASS }}
        cargo publish

  publish-python:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/python/')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true

    - name: Install publishment tool
      working-directory: python
      run: |
        python -m pip install --upgrade pip
        pip install maturin

    - name: Publish (without sdist)
      if: matrix.os != 'ubuntu-latest' || matrix.python-version != '3.7'
      working-directory: python
      run: |
        maturin publish -i python --no-sdist --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TEST_PYPI_USER }} -p ${{ secrets.TEST_PYPI_PASS }}

    - name: Publish
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7'
      working-directory: python
      run: |
        maturin publish -i python --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TEST_PYPI_USER }} -p ${{ secrets.TEST_PYPI_PASS }}

    - name: Publish pypi package
      working-directory: python
      run: |
        pip install twine
        twine upload -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASS }} target/wheels/*

